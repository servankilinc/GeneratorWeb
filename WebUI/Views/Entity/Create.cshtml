@using WebUI.ViewModels.Entity;
@model VMEntityCreate

@{
    ViewData["Title"] = "Create Entity";
    var rowIndex = 0;
}


<form asp-controller="Entity" asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="FormModel.Name" class="control-label"></label>
        <input asp-for="FormModel.Name" class="form-control" />
        <span asp-validation-for="FormModel.Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FormModel.TableName" class="control-label"></label>
        <input asp-for="FormModel.TableName" class="form-control" />
        <span asp-validation-for="FormModel.TableName" class="text-danger"></span>
    </div>

    <div>
        <table class="table table-bordered table-striped table-light my-3">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Field Type</th>
                    <th>Is Unique</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="fieldsContainer">
                @if (Model.FormModel.Fields != null)
                {
                    @foreach (var defaultField in Model.FormModel.Fields)
                    {
                        <tr>
                            <td>
                                <input type="text" name="FormModel.Fields[@rowIndex].Name" value="@defaultField.Name" class="form-control form-control-sm" />
                            </td>
                            <td>
                                <select name="FormModel.Fields[@rowIndex].FieldTypeId" value="@defaultField.FieldTypeId" class="form-control form-control-sm">
                                    @foreach (var item in Model.FieldTypeList)
                                    {
                                        if (item.Id == defaultField.FieldTypeId)
                                        {
                                            <option value="@item.Id" selected>
                                                @item.Name
                                            </option>
                                        }
                                        else
                                        {
                                            <option value="@item.Id">
                                                @item.Name
                                            </option>
                                        }
                                    }
                                </select>
                            </td>
                            <td>
                                <input type="checkbox" name="FormModel.Fields[@rowIndex].IsUnique" value="@(defaultField.IsUnique ? "true" : "false")" @(defaultField.IsUnique ? "checked" : "") />
                            </td>
                            <td>
                                <button type="button" class="btn btn-sm btn-danger remove-field">Remove</button>
                            </td>
                        </tr>

                        rowIndex++;
                    }
                }
            </tbody>
        </table>
        <button type="button" id="addField" class="btn btn-primary">Add Field</button>
    </div>

    <!-- Submit Button -->
    <div class="form-group mt-3">
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
        <button type="submit" class="btn btn-success">Create</button>
    </div>
</form>


@section Scripts {
    <script>

        const fieldTypeOptions = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.FieldTypeList));

        let fieldCount = @(Model.FormModel.Fields == null ? 0 : Model.FormModel.Fields.Count());



        // Add new field row
        document.getElementById('addField').addEventListener('click', function () {
            const container = document.getElementById('fieldsContainer');
            const newRow = document.createElement('tr');

            // Build the options dynamically
            const optionsHtml = fieldTypeOptions.map(ft => `<option value="${ft.Id}">${ft.Name}</option>`).join('');

            newRow.innerHTML = `
                <td>
                    <input type="text" name="FormModel.Fields[${fieldCount}].Name" class="form-control form-control-sm" placeholder="new field" />
                </td>
                <td>
                    <select name="FormModel.Fields[${fieldCount}].FieldTypeId" class="form-control form-control-sm">
                        ${optionsHtml}
                    </select>
                </td>
                <td>
                    <input type="checkbox" name="FormModel.Fields[${fieldCount}].IsUnique" />
                </td>
                <td>
                    <button type="button" class="btn btn-sm btn-danger remove-field">Remove</button>
                </td>
            `;
            container.appendChild(newRow);
            fieldCount++;
        });

        // Remove field row
        document.getElementById('fieldsContainer').addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-field')) {
                e.target.closest('tr').remove();
            }
        });
    </script>

    <script>
        $("input[type=checkbox]").change(function () {
            if ($(this).prop("checked")) {
                $(this).val(true);
            } else {
                $(this).val(false);
            }
        });
    </script>
}